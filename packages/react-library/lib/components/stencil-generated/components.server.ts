/**
 * This file was automatically generated by the Stencil React Output Target.
 * Changes to this file may cause incorrect behavior and will be lost if the code is regenerated.
 * Do __not__ import components from this file as server side rendered components
 * may not hydrate due to missing Stencil runtime. Instead, import these components through the generated 'components.ts'
 * file that re-exports all components with the 'use client' directive.
 */

/* eslint-disable */

import { ColorHighlight as ColorHighlightElement } from '@kit-data-manager/pid-component/dist/components/color-highlight.js';
import { CopyButton as CopyButtonElement } from '@kit-data-manager/pid-component/dist/components/copy-button.js';
import { JsonViewer as JsonViewerElement } from '@kit-data-manager/pid-component/dist/components/json-viewer.js';
import { LocaleVisualization as LocaleVisualizationElement } from '@kit-data-manager/pid-component/dist/components/locale-visualization.js';
import { PidActions as PidActionsElement } from '@kit-data-manager/pid-component/dist/components/pid-actions.js';
import { PidCollapsible as PidCollapsibleElement } from '@kit-data-manager/pid-component/dist/components/pid-collapsible.js';
import { PidComponent as PidComponentElement } from '@kit-data-manager/pid-component/dist/components/pid-component.js';
import { PidDataTable as PidDataTableElement } from '@kit-data-manager/pid-component/dist/components/pid-data-table.js';
import { PidPagination as PidPaginationElement } from '@kit-data-manager/pid-component/dist/components/pid-pagination.js';
import { PidTooltip as PidTooltipElement } from '@kit-data-manager/pid-component/dist/components/pid-tooltip.js';
import type { EventName, StencilReactComponent } from '@stencil/react-output-target/runtime';
import { createComponent, type SerializeShadowRootOptions } from '@stencil/react-output-target/ssr';

export const serializeShadowRoot: SerializeShadowRootOptions = { default: 'declarative-shadow-dom' };

export type ColorHighlightEvents = NonNullable<unknown>;

export const ColorHighlight: StencilReactComponent<ColorHighlightElement, ColorHighlightEvents> = /*@__PURE__*/ createComponent<ColorHighlightElement, ColorHighlightEvents>({
  tagName: 'color-highlight',
  properties: { text: 'text' },
  hydrateModule: import('@kit-data-manager/pid-component/hydrate'),
  serializeShadowRoot,
});

export type CopyButtonEvents = NonNullable<unknown>;

export const CopyButton: StencilReactComponent<CopyButtonElement, CopyButtonEvents> = /*@__PURE__*/ createComponent<CopyButtonElement, CopyButtonEvents>({
  tagName: 'copy-button',
  properties: { value: 'value' },
  hydrateModule: import('@kit-data-manager/pid-component/hydrate'),
  serializeShadowRoot,
});

export type JsonViewerEvents = NonNullable<unknown>;

export const JsonViewer: StencilReactComponent<JsonViewerElement, JsonViewerEvents> = /*@__PURE__*/ createComponent<JsonViewerElement, JsonViewerEvents>({
  tagName: 'json-viewer',
  properties: {
    data: 'data',
    viewMode: 'view-mode',
    maxHeight: 'max-height',
    showLineNumbers: 'show-line-numbers',
    expandAll: 'expand-all',
    theme: 'theme',
  },
  hydrateModule: import('@kit-data-manager/pid-component/hydrate'),
  serializeShadowRoot,
});

export type LocaleVisualizationEvents = NonNullable<unknown>;

export const LocaleVisualization: StencilReactComponent<LocaleVisualizationElement, LocaleVisualizationEvents> = /*@__PURE__*/ createComponent<
  LocaleVisualizationElement,
  LocaleVisualizationEvents
>({
  tagName: 'locale-visualization',
  properties: {
    locale: 'locale',
    showFlag: 'show-flag',
  },
  hydrateModule: import('@kit-data-manager/pid-component/hydrate'),
  serializeShadowRoot,
});

export type PidActionsEvents = NonNullable<unknown>;

export const PidActions: StencilReactComponent<PidActionsElement, PidActionsEvents> = /*@__PURE__*/ createComponent<PidActionsElement, PidActionsEvents>({
  tagName: 'pid-actions',
  properties: { actions: 'actions' },
  hydrateModule: import('@kit-data-manager/pid-component/hydrate'),
  serializeShadowRoot,
});

export type PidCollapsibleEvents = { onCollapsibleToggle: EventName<CustomEvent<boolean>> };

export const PidCollapsible: StencilReactComponent<PidCollapsibleElement, PidCollapsibleEvents> = /*@__PURE__*/ createComponent<PidCollapsibleElement, PidCollapsibleEvents>({
  tagName: 'pid-collapsible',
  properties: {
    open: 'open',
    emphasize: 'emphasize',
    expanded: 'expanded',
    initialWidth: 'initial-width',
    initialHeight: 'initial-height',
    lineHeight: 'line-height',
    showFooter: 'show-footer',
  },
  hydrateModule: import('@kit-data-manager/pid-component/hydrate'),
  serializeShadowRoot,
});

export type PidComponentEvents = NonNullable<unknown>;

export const PidComponent: StencilReactComponent<PidComponentElement, PidComponentEvents> = /*@__PURE__*/ createComponent<PidComponentElement, PidComponentEvents>({
  tagName: 'pid-component',
  properties: {
    value: 'value',
    settings: 'settings',
    openByDefault: 'open-by-default',
    amountOfItems: 'amount-of-items',
    levelOfSubcomponents: 'level-of-subcomponents',
    currentLevelOfSubcomponents: 'current-level-of-subcomponents',
    hideSubcomponents: 'hide-subcomponents',
    emphasizeComponent: 'emphasize-component',
    showTopLevelCopy: 'show-top-level-copy',
    defaultTTL: 'default-t-t-l',
    width: 'width',
    height: 'height',
  },
  hydrateModule: import('@kit-data-manager/pid-component/hydrate'),
  serializeShadowRoot,
});

export type PidDataTableEvents = {
  onPageChange: EventName<CustomEvent<number>>;
  onItemsPerPageChange: EventName<CustomEvent<number>>;
};

export const PidDataTable: StencilReactComponent<PidDataTableElement, PidDataTableEvents> = /*@__PURE__*/ createComponent<PidDataTableElement, PidDataTableEvents>({
  tagName: 'pid-data-table',
  properties: {
    items: 'items',
    itemsPerPage: 'items-per-page',
    currentPage: 'current-page',
    pageSizes: 'page-sizes',
    loadSubcomponents: 'load-subcomponents',
    hideSubcomponents: 'hide-subcomponents',
    currentLevelOfSubcomponents: 'current-level-of-subcomponents',
    levelOfSubcomponents: 'level-of-subcomponents',
    settings: 'settings',
  },
  hydrateModule: import('@kit-data-manager/pid-component/hydrate'),
  serializeShadowRoot,
});

export type PidPaginationEvents = {
  onPageChange: EventName<CustomEvent<number>>;
  onItemsPerPageChange: EventName<CustomEvent<number>>;
};

export const PidPagination: StencilReactComponent<PidPaginationElement, PidPaginationEvents> = /*@__PURE__*/ createComponent<PidPaginationElement, PidPaginationEvents>({
  tagName: 'pid-pagination',
  properties: {
    currentPage: 'current-page',
    totalItems: 'total-items',
    itemsPerPage: 'items-per-page',
    pageSizes: 'page-sizes',
  },
  hydrateModule: import('@kit-data-manager/pid-component/hydrate'),
  serializeShadowRoot,
});

export type PidTooltipEvents = NonNullable<unknown>;

export const PidTooltip: StencilReactComponent<PidTooltipElement, PidTooltipEvents> = /*@__PURE__*/ createComponent<PidTooltipElement, PidTooltipEvents>({
  tagName: 'pid-tooltip',
  properties: {
    text: 'text',
    position: 'position',
    maxWidth: 'max-width',
    maxHeight: 'max-height',
  },
  hydrateModule: import('@kit-data-manager/pid-component/hydrate'),
  serializeShadowRoot,
});
