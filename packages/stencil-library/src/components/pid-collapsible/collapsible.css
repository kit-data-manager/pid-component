/**
 * Core CSS features that cannot be implemented with Tailwind
 */

/*
 * Hide default details marker
 * REASON: Browser-specific pseudo-element that cannot be targeted with Tailwind.
 * Even with marker:hidden, webkit browsers require this specific selector.
 */
details summary::-webkit-details-marker {
  display: none;
}

/*
 * Fix Safari text flow issues
 * REASON: Safari requires explicit display and clear-after to prevent text from flowing under components.
 * This can't be reliably done with Tailwind alone as it requires precise browser behavior control.
 */
pid-collapsible {
  display: block;
  clear: both;
}

/*
 * Enable resize functionality
 * REASON: The 'resize' property doesn't have corresponding Tailwind utilities
 * and requires !important to override browser defaults in some cases.
 */
pid-collapsible.resize-both {
  resize: both !important;
  overflow: auto !important;
  max-width: 100% !important; /* Prevent exceeding parent container */
  will-change: width, height; /* Hint to the browser to optimize for resizing */
  transition: none !important; /* Disable transitions during resize for better performance */
  min-height: fit-content; /* Ensure the component expands to fit its content */
  min-width: fit-content; /* Ensure the component expands to fit its content */
}

/*
 * Safari-specific fixes using browser detection
 * REASON: These browser-specific media queries and feature detection
 * aren't possible with Tailwind's utility classes.
 */
@media not all and (min-resolution: .001dpcm) {
  @supports (-webkit-appearance:none) {
    pid-collapsible details {
      display: flex !important;
      flex-direction: column !important;
    }

    pid-collapsible details summary {
      display: block !important;
    }

    pid-collapsible.resize-both {
      -webkit-resize: both !important;
      resize: both !important;
      overflow: auto !important;
    }
  }
}

/*
 * Custom resize handle with ::after pseudo-element
 * REASON: Creating decorative elements with pseudo-elements isn't possible
 * with Tailwind without plugins. The cursor:nwse-resize is also not available.
 */
pid-collapsible.resize-both::after {
  content: '';
  position: absolute;
  bottom: 0;
  right: 0;
  width: 10px;
  height: 10px;
  cursor: nwse-resize;
  background: linear-gradient(-45deg, rgba(0, 0, 0, 0.1) 0%, rgba(0, 0, 0, 0.1) 50%, transparent 50%);
  z-index: 10; /* Ensure resize handle is above other elements */
}

/*
 * Safari enhanced support
 * REASON: Browser-specific feature detection that Tailwind can't handle
 */
@supports (-webkit-appearance:none) and (not (display: -webkit-box)) {
  pid-collapsible.resize-both {
    resize: both !important;
    overflow: auto !important;
    display: block !important;
    position: relative !important;
  }

  /* Force Safari to respect resize property */
  pid-collapsible.resize-both::before {
    content: '';
    display: block;
    width: 100%;
    height: 100%;
    position: absolute;
    top: 0;
    left: 0;
    pointer-events: none;
    z-index: -1;
  }
}

/*
 * Safari-specific flexbox fixes
 * REASON: Webkit-specific properties aren't available in Tailwind
 */
@supports (-webkit-appearance:none) {
  pid-collapsible details {
    display: -webkit-box !important;
    display: -webkit-flex !important;
    display: flex !important;
    -webkit-box-orient: vertical !important;
    -webkit-box-direction: normal !important;
    -webkit-flex-direction: column !important;
    flex-direction: column !important;
    min-height: 100%; /* Fix for Safari to ensure the footer stays at the bottom */
  }
}

/*
 * Force style recalculation in Safari
 * REASON: This rendering trick forces Safari to recalculate styles
 * and can't be done with Tailwind classes
 */
@media all and (-webkit-min-device-pixel-ratio: 0) and (min-resolution: .001dpcm) {
  pid-collapsible {
    -webkit-transform: translateZ(0);
    transform: translateZ(0);
    /* Safari-specific clearfix to prevent text flow issues */
    display: inline-block;
    vertical-align: top;
    margin-bottom: 1px; /* This tiny margin helps with layout stability */
  }

  /* Optimization class for resize operations */
  pid-collapsible.resizing {
    pointer-events: none; /* Prevent interaction during resize for better performance */
    contain: layout size; /* CSS containment for better performance */
  }

  /* Ensure collapsed state in Safari doesn't affect text flow */
  pid-collapsible:not(.resize-both)::after {
    content: '';
    display: block;
    clear: both;
    height: 0;
    visibility: hidden;
  }

  /* Ensure resize works in Safari */
  pid-collapsible.resize-both {
    position: relative;
    -webkit-resize: both !important;
    resize: both !important;
    overflow: auto !important;
    max-width: 100% !important;
    max-height: 90vh !important;
    display: block !important;
  }

  /* Enhanced resize handle visibility for Safari */
  pid-collapsible.resize-both::after {
    content: '';
    position: absolute;
    bottom: 0;
    right: 0;
    width: 15px;
    height: 15px;
    cursor: nwse-resize;
    background: linear-gradient(-45deg, rgba(0, 0, 0, 0.2) 0%, rgba(0, 0, 0, 0.2) 50%, transparent 50%);
    z-index: 10;
  }
}

/*
 * Z-index definitions for stacking contexts
 * REASON: While Tailwind has z-index utilities, we need specific values
 * for complex layering scenarios that can be reused consistently
 */
:root {
  --z-back: -1;
  --z-resize: 10;
  --z-content: 20;
  --z-footer: 30;
  --z-header: 50;
}

/*
 * Host element styles
 * REASON: The :host selector is specific to web components and
 * can't be targeted with Tailwind without plugins
 */
:host {
  display: block;
  --initial-width: 500px;
  --initial-height: 300px;
  --min-width: 300px;
  --min-height: 200px;
}

/*
 * Responsive custom property adjustments
 * REASON: CSS custom properties with media queries require direct CSS
 */
@media (max-width: 768px) {
  :host {
    --initial-width: 400px;
    --min-width: 250px;
  }
}

@media (max-width: 480px) {
  :host {
    --initial-width: 300px;
    --min-width: 200px;
  }
}

/*
 * High contrast mode support
 * REASON: Accessibility features like high contrast mode support
 * need media queries that Tailwind doesn't provide
 */
@media (prefers-contrast: more) {
  pid-collapsible summary {
    border: 1px solid currentColor;
  }

  pid-collapsible.resize-both::after {
    background: currentColor;
    opacity: 0.5;
  }
}

/*
 * Print styles
 * REASON: Print-specific styles aren't well-supported in Tailwind
 * without additional configuration
 */
@media print {
  pid-collapsible.resize-both {
    resize: none !important;
  }

  pid-collapsible.resize-both::after {
    display: none !important;
  }
}

/*
 * Enhanced focus management for accessibility
 * REASON: While Tailwind has focus utilities, these specific combinations
 * with multiple pseudo-classes aren't directly available
 */
pid-collapsible summary:focus-visible {
  outline: 2px solid #0ea5e9;
  outline-offset: 2px;
}

/*
 * Ensure forced overflow visibility for dropdowns
 * REASON: The !important flag is needed to override conflicting styles
 * that might be applied from other components
 */
pid-collapsible .overflow-visible,
pid-pagination .overflow-visible {
  overflow: visible !important;
}
